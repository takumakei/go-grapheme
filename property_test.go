// Code generated from "http://www.unicode.org/Public/9.0.0/ucd/auxiliary/GraphemeBreakProperty.txt"; DO NOT EDIT

package grapheme

var keys = [...]rune{
	0x0000,
	0x000a,
	0x000b,
	0x000d,
	0x000e,
	0x0020,
	0x007f,
	0x00a0,
	0x00ad,
	0x00ae,
	0x0300,
	0x0370,
	0x0483,
	0x048a,
	0x0591,
	0x05be,
	0x05bf,
	0x05c0,
	0x05c1,
	0x05c3,
	0x05c4,
	0x05c6,
	0x05c7,
	0x05c8,
	0x0600,
	0x0606,
	0x0610,
	0x061b,
	0x061c,
	0x061d,
	0x064b,
	0x0660,
	0x0670,
	0x0671,
	0x06d6,
	0x06dd,
	0x06de,
	0x06df,
	0x06e5,
	0x06e7,
	0x06e9,
	0x06ea,
	0x06ee,
	0x070f,
	0x0710,
	0x0711,
	0x0712,
	0x0730,
	0x074b,
	0x07a6,
	0x07b1,
	0x07eb,
	0x07f4,
	0x0816,
	0x081a,
	0x081b,
	0x0824,
	0x0825,
	0x0828,
	0x0829,
	0x082e,
	0x0859,
	0x085c,
	0x08d4,
	0x08e2,
	0x08e3,
	0x0903,
	0x0904,
	0x093a,
	0x093b,
	0x093c,
	0x093d,
	0x093e,
	0x0941,
	0x0949,
	0x094d,
	0x094e,
	0x0950,
	0x0951,
	0x0958,
	0x0962,
	0x0964,
	0x0981,
	0x0982,
	0x0984,
	0x09bc,
	0x09bd,
	0x09be,
	0x09bf,
	0x09c1,
	0x09c5,
	0x09c7,
	0x09c9,
	0x09cb,
	0x09cd,
	0x09ce,
	0x09d7,
	0x09d8,
	0x09e2,
	0x09e4,
	0x0a01,
	0x0a03,
	0x0a04,
	0x0a3c,
	0x0a3d,
	0x0a3e,
	0x0a41,
	0x0a43,
	0x0a47,
	0x0a49,
	0x0a4b,
	0x0a4e,
	0x0a51,
	0x0a52,
	0x0a70,
	0x0a72,
	0x0a75,
	0x0a76,
	0x0a81,
	0x0a83,
	0x0a84,
	0x0abc,
	0x0abd,
	0x0abe,
	0x0ac1,
	0x0ac6,
	0x0ac7,
	0x0ac9,
	0x0aca,
	0x0acb,
	0x0acd,
	0x0ace,
	0x0ae2,
	0x0ae4,
	0x0b01,
	0x0b02,
	0x0b04,
	0x0b3c,
	0x0b3d,
	0x0b3e,
	0x0b40,
	0x0b41,
	0x0b45,
	0x0b47,
	0x0b49,
	0x0b4b,
	0x0b4d,
	0x0b4e,
	0x0b56,
	0x0b58,
	0x0b62,
	0x0b64,
	0x0b82,
	0x0b83,
	0x0bbe,
	0x0bbf,
	0x0bc0,
	0x0bc1,
	0x0bc3,
	0x0bc6,
	0x0bc9,
	0x0bca,
	0x0bcd,
	0x0bce,
	0x0bd7,
	0x0bd8,
	0x0c00,
	0x0c01,
	0x0c04,
	0x0c3e,
	0x0c41,
	0x0c45,
	0x0c46,
	0x0c49,
	0x0c4a,
	0x0c4e,
	0x0c55,
	0x0c57,
	0x0c62,
	0x0c64,
	0x0c81,
	0x0c82,
	0x0c84,
	0x0cbc,
	0x0cbd,
	0x0cbe,
	0x0cbf,
	0x0cc0,
	0x0cc2,
	0x0cc3,
	0x0cc5,
	0x0cc6,
	0x0cc7,
	0x0cc9,
	0x0cca,
	0x0ccc,
	0x0cce,
	0x0cd5,
	0x0cd7,
	0x0ce2,
	0x0ce4,
	0x0d01,
	0x0d02,
	0x0d04,
	0x0d3e,
	0x0d3f,
	0x0d41,
	0x0d45,
	0x0d46,
	0x0d49,
	0x0d4a,
	0x0d4d,
	0x0d4e,
	0x0d4f,
	0x0d57,
	0x0d58,
	0x0d62,
	0x0d64,
	0x0d82,
	0x0d84,
	0x0dca,
	0x0dcb,
	0x0dcf,
	0x0dd0,
	0x0dd2,
	0x0dd5,
	0x0dd6,
	0x0dd7,
	0x0dd8,
	0x0ddf,
	0x0de0,
	0x0df2,
	0x0df4,
	0x0e31,
	0x0e32,
	0x0e33,
	0x0e34,
	0x0e3b,
	0x0e47,
	0x0e4f,
	0x0eb1,
	0x0eb2,
	0x0eb3,
	0x0eb4,
	0x0eba,
	0x0ebb,
	0x0ebd,
	0x0ec8,
	0x0ece,
	0x0f18,
	0x0f1a,
	0x0f35,
	0x0f36,
	0x0f37,
	0x0f38,
	0x0f39,
	0x0f3a,
	0x0f3e,
	0x0f40,
	0x0f71,
	0x0f7f,
	0x0f80,
	0x0f85,
	0x0f86,
	0x0f88,
	0x0f8d,
	0x0f98,
	0x0f99,
	0x0fbd,
	0x0fc6,
	0x0fc7,
	0x102d,
	0x1031,
	0x1032,
	0x1038,
	0x1039,
	0x103b,
	0x103d,
	0x103f,
	0x1056,
	0x1058,
	0x105a,
	0x105e,
	0x1061,
	0x1071,
	0x1075,
	0x1082,
	0x1083,
	0x1084,
	0x1085,
	0x1087,
	0x108d,
	0x108e,
	0x109d,
	0x109e,
	0x1100,
	0x1160,
	0x11a8,
	0x1200,
	0x135d,
	0x1360,
	0x1712,
	0x1715,
	0x1732,
	0x1735,
	0x1752,
	0x1754,
	0x1772,
	0x1774,
	0x17b4,
	0x17b6,
	0x17b7,
	0x17be,
	0x17c6,
	0x17c7,
	0x17c9,
	0x17d4,
	0x17dd,
	0x17de,
	0x180b,
	0x180e,
	0x180f,
	0x1885,
	0x1887,
	0x18a9,
	0x18aa,
	0x1920,
	0x1923,
	0x1927,
	0x1929,
	0x192c,
	0x1930,
	0x1932,
	0x1933,
	0x1939,
	0x193c,
	0x1a17,
	0x1a19,
	0x1a1b,
	0x1a1c,
	0x1a55,
	0x1a56,
	0x1a57,
	0x1a58,
	0x1a5f,
	0x1a60,
	0x1a61,
	0x1a62,
	0x1a63,
	0x1a65,
	0x1a6d,
	0x1a73,
	0x1a7d,
	0x1a7f,
	0x1a80,
	0x1ab0,
	0x1abf,
	0x1b00,
	0x1b04,
	0x1b05,
	0x1b34,
	0x1b35,
	0x1b36,
	0x1b3b,
	0x1b3c,
	0x1b3d,
	0x1b42,
	0x1b43,
	0x1b45,
	0x1b6b,
	0x1b74,
	0x1b80,
	0x1b82,
	0x1b83,
	0x1ba1,
	0x1ba2,
	0x1ba6,
	0x1ba8,
	0x1baa,
	0x1bab,
	0x1bae,
	0x1be6,
	0x1be7,
	0x1be8,
	0x1bea,
	0x1bed,
	0x1bee,
	0x1bef,
	0x1bf2,
	0x1bf4,
	0x1c24,
	0x1c2c,
	0x1c34,
	0x1c36,
	0x1c38,
	0x1cd0,
	0x1cd3,
	0x1cd4,
	0x1ce1,
	0x1ce2,
	0x1ce9,
	0x1ced,
	0x1cee,
	0x1cf2,
	0x1cf4,
	0x1cf5,
	0x1cf8,
	0x1cfa,
	0x1dc0,
	0x1df6,
	0x1dfb,
	0x1e00,
	0x200b,
	0x200c,
	0x200d,
	0x200e,
	0x2010,
	0x2028,
	0x202f,
	0x2060,
	0x2070,
	0x20d0,
	0x20f1,
	0x261d,
	0x261e,
	0x26f9,
	0x26fa,
	0x270a,
	0x270e,
	0x2764,
	0x2765,
	0x2cef,
	0x2cf2,
	0x2d7f,
	0x2d80,
	0x2de0,
	0x2e00,
	0x302a,
	0x3030,
	0x3099,
	0x309b,
	0xa66f,
	0xa673,
	0xa674,
	0xa67e,
	0xa69e,
	0xa6a0,
	0xa6f0,
	0xa6f2,
	0xa802,
	0xa803,
	0xa806,
	0xa807,
	0xa80b,
	0xa80c,
	0xa823,
	0xa825,
	0xa827,
	0xa828,
	0xa880,
	0xa882,
	0xa8b4,
	0xa8c4,
	0xa8c6,
	0xa8e0,
	0xa8f2,
	0xa926,
	0xa92e,
	0xa947,
	0xa952,
	0xa954,
	0xa960,
	0xa97d,
	0xa980,
	0xa983,
	0xa984,
	0xa9b3,
	0xa9b4,
	0xa9b6,
	0xa9ba,
	0xa9bc,
	0xa9bd,
	0xa9c1,
	0xa9e5,
	0xa9e6,
	0xaa29,
	0xaa2f,
	0xaa31,
	0xaa33,
	0xaa35,
	0xaa37,
	0xaa43,
	0xaa44,
	0xaa4c,
	0xaa4d,
	0xaa4e,
	0xaa7c,
	0xaa7d,
	0xaab0,
	0xaab1,
	0xaab2,
	0xaab5,
	0xaab7,
	0xaab9,
	0xaabe,
	0xaac0,
	0xaac1,
	0xaac2,
	0xaaeb,
	0xaaec,
	0xaaee,
	0xaaf0,
	0xaaf5,
	0xaaf6,
	0xaaf7,
	0xabe3,
	0xabe5,
	0xabe6,
	0xabe8,
	0xabe9,
	0xabeb,
	0xabec,
	0xabed,
	0xabee,
	0xac00,
	0xac01,
	0xac1c,
	0xac1d,
	0xac38,
	0xac39,
	0xac54,
	0xac55,
	0xac70,
	0xac71,
	0xac8c,
	0xac8d,
	0xaca8,
	0xaca9,
	0xacc4,
	0xacc5,
	0xace0,
	0xace1,
	0xacfc,
	0xacfd,
	0xad18,
	0xad19,
	0xad34,
	0xad35,
	0xad50,
	0xad51,
	0xad6c,
	0xad6d,
	0xad88,
	0xad89,
	0xada4,
	0xada5,
	0xadc0,
	0xadc1,
	0xaddc,
	0xaddd,
	0xadf8,
	0xadf9,
	0xae14,
	0xae15,
	0xae30,
	0xae31,
	0xae4c,
	0xae4d,
	0xae68,
	0xae69,
	0xae84,
	0xae85,
	0xaea0,
	0xaea1,
	0xaebc,
	0xaebd,
	0xaed8,
	0xaed9,
	0xaef4,
	0xaef5,
	0xaf10,
	0xaf11,
	0xaf2c,
	0xaf2d,
	0xaf48,
	0xaf49,
	0xaf64,
	0xaf65,
	0xaf80,
	0xaf81,
	0xaf9c,
	0xaf9d,
	0xafb8,
	0xafb9,
	0xafd4,
	0xafd5,
	0xaff0,
	0xaff1,
	0xb00c,
	0xb00d,
	0xb028,
	0xb029,
	0xb044,
	0xb045,
	0xb060,
	0xb061,
	0xb07c,
	0xb07d,
	0xb098,
	0xb099,
	0xb0b4,
	0xb0b5,
	0xb0d0,
	0xb0d1,
	0xb0ec,
	0xb0ed,
	0xb108,
	0xb109,
	0xb124,
	0xb125,
	0xb140,
	0xb141,
	0xb15c,
	0xb15d,
	0xb178,
	0xb179,
	0xb194,
	0xb195,
	0xb1b0,
	0xb1b1,
	0xb1cc,
	0xb1cd,
	0xb1e8,
	0xb1e9,
	0xb204,
	0xb205,
	0xb220,
	0xb221,
	0xb23c,
	0xb23d,
	0xb258,
	0xb259,
	0xb274,
	0xb275,
	0xb290,
	0xb291,
	0xb2ac,
	0xb2ad,
	0xb2c8,
	0xb2c9,
	0xb2e4,
	0xb2e5,
	0xb300,
	0xb301,
	0xb31c,
	0xb31d,
	0xb338,
	0xb339,
	0xb354,
	0xb355,
	0xb370,
	0xb371,
	0xb38c,
	0xb38d,
	0xb3a8,
	0xb3a9,
	0xb3c4,
	0xb3c5,
	0xb3e0,
	0xb3e1,
	0xb3fc,
	0xb3fd,
	0xb418,
	0xb419,
	0xb434,
	0xb435,
	0xb450,
	0xb451,
	0xb46c,
	0xb46d,
	0xb488,
	0xb489,
	0xb4a4,
	0xb4a5,
	0xb4c0,
	0xb4c1,
	0xb4dc,
	0xb4dd,
	0xb4f8,
	0xb4f9,
	0xb514,
	0xb515,
	0xb530,
	0xb531,
	0xb54c,
	0xb54d,
	0xb568,
	0xb569,
	0xb584,
	0xb585,
	0xb5a0,
	0xb5a1,
	0xb5bc,
	0xb5bd,
	0xb5d8,
	0xb5d9,
	0xb5f4,
	0xb5f5,
	0xb610,
	0xb611,
	0xb62c,
	0xb62d,
	0xb648,
	0xb649,
	0xb664,
	0xb665,
	0xb680,
	0xb681,
	0xb69c,
	0xb69d,
	0xb6b8,
	0xb6b9,
	0xb6d4,
	0xb6d5,
	0xb6f0,
	0xb6f1,
	0xb70c,
	0xb70d,
	0xb728,
	0xb729,
	0xb744,
	0xb745,
	0xb760,
	0xb761,
	0xb77c,
	0xb77d,
	0xb798,
	0xb799,
	0xb7b4,
	0xb7b5,
	0xb7d0,
	0xb7d1,
	0xb7ec,
	0xb7ed,
	0xb808,
	0xb809,
	0xb824,
	0xb825,
	0xb840,
	0xb841,
	0xb85c,
	0xb85d,
	0xb878,
	0xb879,
	0xb894,
	0xb895,
	0xb8b0,
	0xb8b1,
	0xb8cc,
	0xb8cd,
	0xb8e8,
	0xb8e9,
	0xb904,
	0xb905,
	0xb920,
	0xb921,
	0xb93c,
	0xb93d,
	0xb958,
	0xb959,
	0xb974,
	0xb975,
	0xb990,
	0xb991,
	0xb9ac,
	0xb9ad,
	0xb9c8,
	0xb9c9,
	0xb9e4,
	0xb9e5,
	0xba00,
	0xba01,
	0xba1c,
	0xba1d,
	0xba38,
	0xba39,
	0xba54,
	0xba55,
	0xba70,
	0xba71,
	0xba8c,
	0xba8d,
	0xbaa8,
	0xbaa9,
	0xbac4,
	0xbac5,
	0xbae0,
	0xbae1,
	0xbafc,
	0xbafd,
	0xbb18,
	0xbb19,
	0xbb34,
	0xbb35,
	0xbb50,
	0xbb51,
	0xbb6c,
	0xbb6d,
	0xbb88,
	0xbb89,
	0xbba4,
	0xbba5,
	0xbbc0,
	0xbbc1,
	0xbbdc,
	0xbbdd,
	0xbbf8,
	0xbbf9,
	0xbc14,
	0xbc15,
	0xbc30,
	0xbc31,
	0xbc4c,
	0xbc4d,
	0xbc68,
	0xbc69,
	0xbc84,
	0xbc85,
	0xbca0,
	0xbca1,
	0xbcbc,
	0xbcbd,
	0xbcd8,
	0xbcd9,
	0xbcf4,
	0xbcf5,
	0xbd10,
	0xbd11,
	0xbd2c,
	0xbd2d,
	0xbd48,
	0xbd49,
	0xbd64,
	0xbd65,
	0xbd80,
	0xbd81,
	0xbd9c,
	0xbd9d,
	0xbdb8,
	0xbdb9,
	0xbdd4,
	0xbdd5,
	0xbdf0,
	0xbdf1,
	0xbe0c,
	0xbe0d,
	0xbe28,
	0xbe29,
	0xbe44,
	0xbe45,
	0xbe60,
	0xbe61,
	0xbe7c,
	0xbe7d,
	0xbe98,
	0xbe99,
	0xbeb4,
	0xbeb5,
	0xbed0,
	0xbed1,
	0xbeec,
	0xbeed,
	0xbf08,
	0xbf09,
	0xbf24,
	0xbf25,
	0xbf40,
	0xbf41,
	0xbf5c,
	0xbf5d,
	0xbf78,
	0xbf79,
	0xbf94,
	0xbf95,
	0xbfb0,
	0xbfb1,
	0xbfcc,
	0xbfcd,
	0xbfe8,
	0xbfe9,
	0xc004,
	0xc005,
	0xc020,
	0xc021,
	0xc03c,
	0xc03d,
	0xc058,
	0xc059,
	0xc074,
	0xc075,
	0xc090,
	0xc091,
	0xc0ac,
	0xc0ad,
	0xc0c8,
	0xc0c9,
	0xc0e4,
	0xc0e5,
	0xc100,
	0xc101,
	0xc11c,
	0xc11d,
	0xc138,
	0xc139,
	0xc154,
	0xc155,
	0xc170,
	0xc171,
	0xc18c,
	0xc18d,
	0xc1a8,
	0xc1a9,
	0xc1c4,
	0xc1c5,
	0xc1e0,
	0xc1e1,
	0xc1fc,
	0xc1fd,
	0xc218,
	0xc219,
	0xc234,
	0xc235,
	0xc250,
	0xc251,
	0xc26c,
	0xc26d,
	0xc288,
	0xc289,
	0xc2a4,
	0xc2a5,
	0xc2c0,
	0xc2c1,
	0xc2dc,
	0xc2dd,
	0xc2f8,
	0xc2f9,
	0xc314,
	0xc315,
	0xc330,
	0xc331,
	0xc34c,
	0xc34d,
	0xc368,
	0xc369,
	0xc384,
	0xc385,
	0xc3a0,
	0xc3a1,
	0xc3bc,
	0xc3bd,
	0xc3d8,
	0xc3d9,
	0xc3f4,
	0xc3f5,
	0xc410,
	0xc411,
	0xc42c,
	0xc42d,
	0xc448,
	0xc449,
	0xc464,
	0xc465,
	0xc480,
	0xc481,
	0xc49c,
	0xc49d,
	0xc4b8,
	0xc4b9,
	0xc4d4,
	0xc4d5,
	0xc4f0,
	0xc4f1,
	0xc50c,
	0xc50d,
	0xc528,
	0xc529,
	0xc544,
	0xc545,
	0xc560,
	0xc561,
	0xc57c,
	0xc57d,
	0xc598,
	0xc599,
	0xc5b4,
	0xc5b5,
	0xc5d0,
	0xc5d1,
	0xc5ec,
	0xc5ed,
	0xc608,
	0xc609,
	0xc624,
	0xc625,
	0xc640,
	0xc641,
	0xc65c,
	0xc65d,
	0xc678,
	0xc679,
	0xc694,
	0xc695,
	0xc6b0,
	0xc6b1,
	0xc6cc,
	0xc6cd,
	0xc6e8,
	0xc6e9,
	0xc704,
	0xc705,
	0xc720,
	0xc721,
	0xc73c,
	0xc73d,
	0xc758,
	0xc759,
	0xc774,
	0xc775,
	0xc790,
	0xc791,
	0xc7ac,
	0xc7ad,
	0xc7c8,
	0xc7c9,
	0xc7e4,
	0xc7e5,
	0xc800,
	0xc801,
	0xc81c,
	0xc81d,
	0xc838,
	0xc839,
	0xc854,
	0xc855,
	0xc870,
	0xc871,
	0xc88c,
	0xc88d,
	0xc8a8,
	0xc8a9,
	0xc8c4,
	0xc8c5,
	0xc8e0,
	0xc8e1,
	0xc8fc,
	0xc8fd,
	0xc918,
	0xc919,
	0xc934,
	0xc935,
	0xc950,
	0xc951,
	0xc96c,
	0xc96d,
	0xc988,
	0xc989,
	0xc9a4,
	0xc9a5,
	0xc9c0,
	0xc9c1,
	0xc9dc,
	0xc9dd,
	0xc9f8,
	0xc9f9,
	0xca14,
	0xca15,
	0xca30,
	0xca31,
	0xca4c,
	0xca4d,
	0xca68,
	0xca69,
	0xca84,
	0xca85,
	0xcaa0,
	0xcaa1,
	0xcabc,
	0xcabd,
	0xcad8,
	0xcad9,
	0xcaf4,
	0xcaf5,
	0xcb10,
	0xcb11,
	0xcb2c,
	0xcb2d,
	0xcb48,
	0xcb49,
	0xcb64,
	0xcb65,
	0xcb80,
	0xcb81,
	0xcb9c,
	0xcb9d,
	0xcbb8,
	0xcbb9,
	0xcbd4,
	0xcbd5,
	0xcbf0,
	0xcbf1,
	0xcc0c,
	0xcc0d,
	0xcc28,
	0xcc29,
	0xcc44,
	0xcc45,
	0xcc60,
	0xcc61,
	0xcc7c,
	0xcc7d,
	0xcc98,
	0xcc99,
	0xccb4,
	0xccb5,
	0xccd0,
	0xccd1,
	0xccec,
	0xcced,
	0xcd08,
	0xcd09,
	0xcd24,
	0xcd25,
	0xcd40,
	0xcd41,
	0xcd5c,
	0xcd5d,
	0xcd78,
	0xcd79,
	0xcd94,
	0xcd95,
	0xcdb0,
	0xcdb1,
	0xcdcc,
	0xcdcd,
	0xcde8,
	0xcde9,
	0xce04,
	0xce05,
	0xce20,
	0xce21,
	0xce3c,
	0xce3d,
	0xce58,
	0xce59,
	0xce74,
	0xce75,
	0xce90,
	0xce91,
	0xceac,
	0xcead,
	0xcec8,
	0xcec9,
	0xcee4,
	0xcee5,
	0xcf00,
	0xcf01,
	0xcf1c,
	0xcf1d,
	0xcf38,
	0xcf39,
	0xcf54,
	0xcf55,
	0xcf70,
	0xcf71,
	0xcf8c,
	0xcf8d,
	0xcfa8,
	0xcfa9,
	0xcfc4,
	0xcfc5,
	0xcfe0,
	0xcfe1,
	0xcffc,
	0xcffd,
	0xd018,
	0xd019,
	0xd034,
	0xd035,
	0xd050,
	0xd051,
	0xd06c,
	0xd06d,
	0xd088,
	0xd089,
	0xd0a4,
	0xd0a5,
	0xd0c0,
	0xd0c1,
	0xd0dc,
	0xd0dd,
	0xd0f8,
	0xd0f9,
	0xd114,
	0xd115,
	0xd130,
	0xd131,
	0xd14c,
	0xd14d,
	0xd168,
	0xd169,
	0xd184,
	0xd185,
	0xd1a0,
	0xd1a1,
	0xd1bc,
	0xd1bd,
	0xd1d8,
	0xd1d9,
	0xd1f4,
	0xd1f5,
	0xd210,
	0xd211,
	0xd22c,
	0xd22d,
	0xd248,
	0xd249,
	0xd264,
	0xd265,
	0xd280,
	0xd281,
	0xd29c,
	0xd29d,
	0xd2b8,
	0xd2b9,
	0xd2d4,
	0xd2d5,
	0xd2f0,
	0xd2f1,
	0xd30c,
	0xd30d,
	0xd328,
	0xd329,
	0xd344,
	0xd345,
	0xd360,
	0xd361,
	0xd37c,
	0xd37d,
	0xd398,
	0xd399,
	0xd3b4,
	0xd3b5,
	0xd3d0,
	0xd3d1,
	0xd3ec,
	0xd3ed,
	0xd408,
	0xd409,
	0xd424,
	0xd425,
	0xd440,
	0xd441,
	0xd45c,
	0xd45d,
	0xd478,
	0xd479,
	0xd494,
	0xd495,
	0xd4b0,
	0xd4b1,
	0xd4cc,
	0xd4cd,
	0xd4e8,
	0xd4e9,
	0xd504,
	0xd505,
	0xd520,
	0xd521,
	0xd53c,
	0xd53d,
	0xd558,
	0xd559,
	0xd574,
	0xd575,
	0xd590,
	0xd591,
	0xd5ac,
	0xd5ad,
	0xd5c8,
	0xd5c9,
	0xd5e4,
	0xd5e5,
	0xd600,
	0xd601,
	0xd61c,
	0xd61d,
	0xd638,
	0xd639,
	0xd654,
	0xd655,
	0xd670,
	0xd671,
	0xd68c,
	0xd68d,
	0xd6a8,
	0xd6a9,
	0xd6c4,
	0xd6c5,
	0xd6e0,
	0xd6e1,
	0xd6fc,
	0xd6fd,
	0xd718,
	0xd719,
	0xd734,
	0xd735,
	0xd750,
	0xd751,
	0xd76c,
	0xd76d,
	0xd788,
	0xd789,
	0xd7a4,
	0xd7b0,
	0xd7c7,
	0xd7cb,
	0xd7fc,
	0xd800,
	0xe000,
	0xfb1e,
	0xfb1f,
	0xfe00,
	0xfe10,
	0xfe20,
	0xfe30,
	0xfeff,
	0xff00,
	0xff9e,
	0xffa0,
	0xfff0,
	0xfffc,
	0x101fd,
	0x101fe,
	0x102e0,
	0x102e1,
	0x10376,
	0x1037b,
	0x10a01,
	0x10a04,
	0x10a05,
	0x10a07,
	0x10a0c,
	0x10a10,
	0x10a38,
	0x10a3b,
	0x10a3f,
	0x10a40,
	0x10ae5,
	0x10ae7,
	0x11000,
	0x11001,
	0x11002,
	0x11003,
	0x11038,
	0x11047,
	0x1107f,
	0x11082,
	0x11083,
	0x110b0,
	0x110b3,
	0x110b7,
	0x110b9,
	0x110bb,
	0x110bd,
	0x110be,
	0x11100,
	0x11103,
	0x11127,
	0x1112c,
	0x1112d,
	0x11135,
	0x11173,
	0x11174,
	0x11180,
	0x11182,
	0x11183,
	0x111b3,
	0x111b6,
	0x111bf,
	0x111c1,
	0x111c2,
	0x111c4,
	0x111ca,
	0x111cd,
	0x1122c,
	0x1122f,
	0x11232,
	0x11234,
	0x11235,
	0x11236,
	0x11238,
	0x1123e,
	0x1123f,
	0x112df,
	0x112e0,
	0x112e3,
	0x112eb,
	0x11300,
	0x11302,
	0x11304,
	0x1133c,
	0x1133d,
	0x1133e,
	0x1133f,
	0x11340,
	0x11341,
	0x11345,
	0x11347,
	0x11349,
	0x1134b,
	0x1134e,
	0x11357,
	0x11358,
	0x11362,
	0x11364,
	0x11366,
	0x1136d,
	0x11370,
	0x11375,
	0x11435,
	0x11438,
	0x11440,
	0x11442,
	0x11445,
	0x11446,
	0x11447,
	0x114b0,
	0x114b1,
	0x114b3,
	0x114b9,
	0x114ba,
	0x114bb,
	0x114bd,
	0x114be,
	0x114bf,
	0x114c1,
	0x114c2,
	0x114c4,
	0x115af,
	0x115b0,
	0x115b2,
	0x115b6,
	0x115b8,
	0x115bc,
	0x115be,
	0x115bf,
	0x115c1,
	0x115dc,
	0x115de,
	0x11630,
	0x11633,
	0x1163b,
	0x1163d,
	0x1163e,
	0x1163f,
	0x11641,
	0x116ab,
	0x116ac,
	0x116ad,
	0x116ae,
	0x116b0,
	0x116b6,
	0x116b7,
	0x116b8,
	0x1171d,
	0x11720,
	0x11722,
	0x11726,
	0x11727,
	0x1172c,
	0x11c2f,
	0x11c30,
	0x11c37,
	0x11c38,
	0x11c3e,
	0x11c3f,
	0x11c40,
	0x11c92,
	0x11ca8,
	0x11ca9,
	0x11caa,
	0x11cb1,
	0x11cb2,
	0x11cb4,
	0x11cb5,
	0x11cb7,
	0x16af0,
	0x16af5,
	0x16b30,
	0x16b37,
	0x16f51,
	0x16f7f,
	0x16f8f,
	0x16f93,
	0x1bc9d,
	0x1bc9f,
	0x1bca0,
	0x1bca4,
	0x1d165,
	0x1d166,
	0x1d167,
	0x1d16a,
	0x1d16d,
	0x1d16e,
	0x1d173,
	0x1d17b,
	0x1d183,
	0x1d185,
	0x1d18c,
	0x1d1aa,
	0x1d1ae,
	0x1d242,
	0x1d245,
	0x1da00,
	0x1da37,
	0x1da3b,
	0x1da6d,
	0x1da75,
	0x1da76,
	0x1da84,
	0x1da85,
	0x1da9b,
	0x1daa0,
	0x1daa1,
	0x1dab0,
	0x1e000,
	0x1e007,
	0x1e008,
	0x1e019,
	0x1e01b,
	0x1e022,
	0x1e023,
	0x1e025,
	0x1e026,
	0x1e02b,
	0x1e8d0,
	0x1e8d7,
	0x1e944,
	0x1e94b,
	0x1f1e6,
	0x1f200,
	0x1f385,
	0x1f386,
	0x1f3c3,
	0x1f3c5,
	0x1f3ca,
	0x1f3cc,
	0x1f3fb,
	0x1f400,
	0x1f442,
	0x1f444,
	0x1f446,
	0x1f451,
	0x1f466,
	0x1f46a,
	0x1f46e,
	0x1f46f,
	0x1f470,
	0x1f479,
	0x1f47c,
	0x1f47d,
	0x1f481,
	0x1f484,
	0x1f485,
	0x1f488,
	0x1f48b,
	0x1f48c,
	0x1f4aa,
	0x1f4ab,
	0x1f575,
	0x1f576,
	0x1f57a,
	0x1f57b,
	0x1f590,
	0x1f591,
	0x1f595,
	0x1f597,
	0x1f5e8,
	0x1f5e9,
	0x1f645,
	0x1f648,
	0x1f64b,
	0x1f650,
	0x1f6a3,
	0x1f6a4,
	0x1f6b4,
	0x1f6b7,
	0x1f6c0,
	0x1f6c1,
	0x1f918,
	0x1f91f,
	0x1f926,
	0x1f927,
	0x1f930,
	0x1f931,
	0x1f933,
	0x1f93a,
	0x1f93c,
	0x1f93f,
	0xe0000,
	0xe0020,
	0xe0080,
	0xe0100,
	0xe01f0,
	0x10ffff,
}
var klen = len(keys)

var vals = [...]Prop{
	Control,
	LF,
	Control,
	CR,
	Control,
	Any,
	Control,
	Any,
	Control,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Prepend,
	Any,
	Extend,
	Any,
	Control,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Prepend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Prepend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Prepend,
	Extend,
	SpacingMark,
	Any,
	Extend,
	SpacingMark,
	Extend,
	Any,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	SpacingMark,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Any,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Extend,
	Any,
	SpacingMark,
	Any,
	SpacingMark,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Any,
	Extend,
	Any,
	SpacingMark,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Any,
	Extend,
	Any,
	SpacingMark,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Any,
	SpacingMark,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Any,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Extend,
	Any,
	SpacingMark,
	Any,
	SpacingMark,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Extend,
	SpacingMark,
	Any,
	SpacingMark,
	Any,
	SpacingMark,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Any,
	Extend,
	SpacingMark,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Any,
	Extend,
	Any,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	SpacingMark,
	Any,
	Extend,
	SpacingMark,
	Any,
	SpacingMark,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Any,
	Extend,
	SpacingMark,
	Extend,
	Any,
	SpacingMark,
	Any,
	SpacingMark,
	Extend,
	Prepend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	SpacingMark,
	Any,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Extend,
	Any,
	Extend,
	Any,
	SpacingMark,
	Extend,
	Any,
	SpacingMark,
	Any,
	Extend,
	Any,
	SpacingMark,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	SpacingMark,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	SpacingMark,
	Any,
	Extend,
	SpacingMark,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Extend,
	Any,
	SpacingMark,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	SpacingMark,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	L,
	V,
	T,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Control,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Extend,
	SpacingMark,
	Any,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Extend,
	Any,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Any,
	Extend,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	SpacingMark,
	Any,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Any,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	SpacingMark,
	Any,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Extend,
	Any,
	Extend,
	Any,
	SpacingMark,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Control,
	Extend,
	ZWJ,
	Control,
	Any,
	Control,
	Any,
	Control,
	Any,
	Extend,
	Any,
	E_Base,
	Any,
	E_Base,
	Any,
	E_Base,
	Any,
	Glue_After_Zwj,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	SpacingMark,
	Extend,
	SpacingMark,
	Any,
	SpacingMark,
	Any,
	SpacingMark,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Any,
	L,
	Any,
	Extend,
	SpacingMark,
	Any,
	Extend,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	SpacingMark,
	Any,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	SpacingMark,
	Extend,
	SpacingMark,
	Any,
	SpacingMark,
	Extend,
	Any,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	SpacingMark,
	Any,
	SpacingMark,
	Extend,
	Any,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	LV,
	LVT,
	Any,
	V,
	Any,
	T,
	Any,
	Control,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Control,
	Any,
	Extend,
	Any,
	Control,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	SpacingMark,
	Extend,
	SpacingMark,
	Any,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Any,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	Any,
	Prepend,
	Any,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Any,
	SpacingMark,
	Extend,
	SpacingMark,
	Any,
	Prepend,
	Any,
	Extend,
	Any,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Any,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Extend,
	SpacingMark,
	Any,
	SpacingMark,
	Any,
	SpacingMark,
	Any,
	Extend,
	Any,
	SpacingMark,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Extend,
	Any,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	Any,
	Extend,
	Any,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	Any,
	SpacingMark,
	Extend,
	Any,
	Extend,
	SpacingMark,
	Extend,
	Any,
	Extend,
	Any,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	SpacingMark,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	SpacingMark,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Control,
	Any,
	Extend,
	SpacingMark,
	Extend,
	Any,
	SpacingMark,
	Extend,
	Control,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Extend,
	Any,
	Regional_Indicator,
	Any,
	E_Base,
	Any,
	E_Base,
	Any,
	E_Base,
	Any,
	E_Modifier,
	Any,
	E_Base,
	Any,
	E_Base,
	Any,
	E_Base_GAZ,
	Any,
	E_Base,
	Any,
	E_Base,
	Any,
	E_Base,
	Any,
	E_Base,
	Any,
	E_Base,
	Any,
	Glue_After_Zwj,
	Any,
	E_Base,
	Any,
	E_Base,
	Any,
	E_Base,
	Any,
	E_Base,
	Any,
	E_Base,
	Any,
	Glue_After_Zwj,
	Any,
	E_Base,
	Any,
	E_Base,
	Any,
	E_Base,
	Any,
	E_Base,
	Any,
	E_Base,
	Any,
	E_Base,
	Any,
	E_Base,
	Any,
	E_Base,
	Any,
	E_Base,
	Any,
	E_Base,
	Any,
	Control,
	Extend,
	Control,
	Extend,
	Control,
	OutOfRange,
}

func property(r rune) Prop {
	a, b := 0, klen
	for {
		c := b - a
		if c <= 1 {
			break
		}
		m := a + c/2
		if r < keys[m] {
			b = m
		} else {
			a = m
		}
	}
	return vals[a]
}
